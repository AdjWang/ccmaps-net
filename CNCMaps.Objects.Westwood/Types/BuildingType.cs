using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using CNCMaps.Objects.Westwood.Types;

namespace CNCMaps.Engine.Types {
	public class BuildingType : TechnoType {
		public BuildingType(string ID) : base(ID) { }

		// art

		public Point MuzzleFlashX;
		public Point DamageFireOffsetX;
		public int Height;
		public int OccupyHeight;
		public bool Recoilless;
		public bool DoubleThick;
		public bool Flat;
		public bool SiloDamage;
		public bool ChargeAnim;
		public bool IsAnimDelayedFire;
		public int DelayedFireDelay;
		public OverlayType ToOverlay;
		public Size Foundation;
		public int MidPoint;
		public int DoorStages;
		public bool DamagedDoor;
		public bool TerrainPalette;
		public int GateStages;
		public Point PrimaryFirePixelOffset;
		public Point SecondaryFirePixelOffset;
		public bool PrimaryFireDualOffset;
		public bool ExtraDamageStage;
		public int SpecialZOverlayZAdjust;
		public int NormalZAdjust;
		public Point ZShapePointMove;
		public int ExtraLight;
		public bool CanHideThings;
		public List<Point> AddOccupyX;
		public List<Point> RemoveOccupyX;
		public Point QueueingCell;
		public Animation Buildup;
		public XYZ AnimIdle;
		public XYZ AnimActive;
		public XYZ AnimAux1;
		public XYZ AnimAux2;
		public Animation ActiveAnim;
		public Animation ActiveAnimDamaged;
		public Animation ActiveAnimGarrisoned;
		public int ActiveAnimX;
		public int ActiveAnimY;
		public int ActiveAnimZAdjust;
		public int ActiveAnimYSort;
		public bool ActiveAnimPowered;
		public bool ActiveAnimPoweredLight;
		public bool ActiveAnimPoweredEffect;
		public bool ActiveAnimPoweredSpecial;
		public Animation ActiveAnimTwo;
		public Animation ActiveAnimTwoDamaged;
		public Animation ActiveAnimTwoGarrisoned;
		public int ActiveAnimTwoX;
		public int ActiveAnimTwoY;
		public int ActiveAnimTwoZAdjust;
		public int ActiveAnimTwoYSort;
		public bool ActiveAnimTwoPowered;
		public bool ActiveAnimTwoPoweredLight;
		public bool ActiveAnimTwoPoweredEffect;
		public bool ActiveAnimTwoPoweredSpecial;
		public Animation ActiveAnimThree;
		public Animation ActiveAnimThreeDamaged;
		public Animation ActiveAnimThreeGarrisoned;
		public int ActiveAnimThreeX;
		public int ActiveAnimThreeY;
		public int ActiveAnimThreeZAdjust;
		public int ActiveAnimThreeYSort;
		public bool ActiveAnimThreePowered;
		public bool ActiveAnimThreePoweredLight;
		public bool ActiveAnimThreePoweredEffect;
		public bool ActiveAnimThreePoweredSpecial;
		public Animation ActiveAnimFour;
		public Animation ActiveAnimFourDamaged;
		public Animation ActiveAnimFourGarrisoned;
		public int ActiveAnimFourX;
		public int ActiveAnimFourY;
		public int ActiveAnimFourZAdjust;
		public int ActiveAnimFourYSort;
		public bool ActiveAnimFourPowered;
		public bool ActiveAnimFourPoweredLight;
		public bool ActiveAnimFourPoweredEffect;
		public bool ActiveAnimFourPoweredSpecial;
		public Animation ProductionAnim;
		public Animation ProductionAnimDamaged;
		public Animation ProductionAnimGarrisoned;
		public int ProductionAnimX;
		public int ProductionAnimY;
		public int ProductionAnimZAdjust;
		public int ProductionAnimYSort;
		public bool ProductionAnimPowered;
		public bool ProductionAnimPoweredLight;
		public bool ProductionAnimPoweredEffect;
		public bool ProductionAnimPoweredSpecial;
		public Animation PreProductionAnim;
		public Animation PreProductionAnimDamaged;
		public Animation PreProductionAnimGarrisoned;
		public int PreProductionAnimX;
		public int PreProductionAnimY;
		public int PreProductionAnimZAdjust;
		public int PreProductionAnimYSort;
		public bool PreProductionAnimPowered;
		public bool PreProductionAnimPoweredLight;
		public bool PreProductionAnimPoweredEffect;
		public bool PreProductionAnimPoweredSpecial;
		public Animation SpecialAnim;
		public Animation SpecialAnimDamaged;
		public Animation SpecialAnimGarrisoned;
		public int SpecialAnimX;
		public int SpecialAnimY;
		public int SpecialAnimZAdjust;
		public int SpecialAnimYSort;
		public bool SpecialAnimPowered;
		public bool SpecialAnimPoweredLight;
		public bool SpecialAnimPoweredEffect;
		public bool SpecialAnimPoweredSpecial;
		public Animation SpecialAnimTwo;
		public Animation SpecialAnimTwoDamaged;
		public Animation SpecialAnimTwoGarrisoned;
		public int SpecialAnimTwoX;
		public int SpecialAnimTwoY;
		public int SpecialAnimTwoZAdjust;
		public int SpecialAnimTwoYSort;
		public bool SpecialAnimTwoPowered;
		public bool SpecialAnimTwoPoweredLight;
		public bool SpecialAnimTwoPoweredEffect;
		public bool SpecialAnimTwoPoweredSpecial;
		public Animation SpecialAnimThree;
		public Animation SpecialAnimThreeDamaged;
		public Animation SpecialAnimThreeGarrisoned;
		public int SpecialAnimThreeX;
		public int SpecialAnimThreeY;
		public int SpecialAnimThreeZAdjust;
		public int SpecialAnimThreeYSort;
		public bool SpecialAnimThreePowered;
		public bool SpecialAnimThreePoweredLight;
		public bool SpecialAnimThreePoweredEffect;
		public bool SpecialAnimThreePoweredSpecial;
		public Animation SpecialAnimFour;
		public Animation SpecialAnimFourDamaged;
		public Animation SpecialAnimFourGarrisoned;
		public int SpecialAnimFourX;
		public int SpecialAnimFourY;
		public int SpecialAnimFourZAdjust;
		public int SpecialAnimFourYSort;
		public bool SpecialAnimFourPowered;
		public bool SpecialAnimFourPoweredLight;
		public bool SpecialAnimFourPoweredEffect;
		public bool SpecialAnimFourPoweredSpecial;
		public Animation SuperAnim;
		public Animation SuperAnimDamaged;
		public Animation SuperAnimGarrisoned;
		public int SuperAnimX;
		public int SuperAnimY;
		public int SuperAnimZAdjust;
		public int SuperAnimYSort;
		public bool SuperAnimPowered;
		public bool SuperAnimPoweredLight;
		public bool SuperAnimPoweredEffect;
		public bool SuperAnimPoweredSpecial;
		public Animation SuperAnimTwo;
		public Animation SuperAnimTwoDamaged;
		public Animation SuperAnimTwoGarrisoned;
		public int SuperAnimTwoX;
		public int SuperAnimTwoY;
		public int SuperAnimTwoZAdjust;
		public int SuperAnimTwoYSort;
		public bool SuperAnimTwoPowered;
		public bool SuperAnimTwoPoweredLight;
		public bool SuperAnimTwoPoweredEffect;
		public bool SuperAnimTwoPoweredSpecial;
		public Animation SuperAnimThree;
		public Animation SuperAnimThreeDamaged;
		public Animation SuperAnimThreeGarrisoned;
		public int SuperAnimThreeX;
		public int SuperAnimThreeY;
		public int SuperAnimThreeZAdjust;
		public int SuperAnimThreeYSort;
		public bool SuperAnimThreePowered;
		public bool SuperAnimThreePoweredLight;
		public bool SuperAnimThreePoweredEffect;
		public bool SuperAnimThreePoweredSpecial;
		public Animation SuperAnimFour;
		public Animation SuperAnimFourDamaged;
		public Animation SuperAnimFourGarrisoned;
		public int SuperAnimFourX;
		public int SuperAnimFourY;
		public int SuperAnimFourZAdjust;
		public int SuperAnimFourYSort;
		public bool SuperAnimFourPowered;
		public bool SuperAnimFourPoweredLight;
		public bool SuperAnimFourPoweredEffect;
		public bool SuperAnimFourPoweredSpecial;
		public Animation IdleAnim;
		public Animation IdleAnimDamaged;
		public Animation IdleAnimGarrisoned;
		public int IdleAnimX;
		public int IdleAnimY;
		public int IdleAnimZAdjust;
		public int IdleAnimYSort;
		public bool IdleAnimPowered;
		public bool IdleAnimPoweredLight;
		public bool IdleAnimPoweredEffect;
		public bool IdleAnimPoweredSpecial;
		public Animation LowPowerAnim;
		public Animation LowPowerAnimDamaged;
		public Animation LowPowerAnimGarrisoned;
		public int LowPowerAnimX;
		public int LowPowerAnimY;
		public int LowPowerAnimZAdjust;
		public int LowPowerAnimYSort;
		public bool LowPowerAnimPowered;
		public bool LowPowerAnimPoweredLight;
		public bool LowPowerAnimPoweredEffect;
		public bool LowPowerAnimPoweredSpecial;
		public Animation SuperLowPowerAnim;
		public Animation SuperLowPowerAnimDamaged;
		public Animation SuperLowPowerAnimGarrisoned;
		public int SuperLowPowerAnimX;
		public int SuperLowPowerAnimY;
		public int SuperLowPowerAnimZAdjust;
		public int SuperLowPowerAnimYSort;
		public bool SuperLowPowerAnimPowered;
		public bool SuperLowPowerAnimPoweredLight;
		public bool SuperLowPowerAnimPoweredEffect;
		public bool SuperLowPowerAnimPoweredSpecial;
		public Animation PowerUpXAnim;
		public Animation PowerUpXDamagedAnim;
		public int PowerUpXLocXX;
		public int PowerUpXLocYY;
		public int PowerUpXLocZZ;
		public int PowerUpXYSort;
		public Animation DeployingAnim;
		public Animation RoofDeployingAnim;
		public Animation DoorAnim;
		public Animation UnderDoorAnim;
		public Animation Rubble;
		public Animation UnderRoofDoorAnim;
		public Animation SpecialZOverlay;
		public Animation BibShape;
		public Animation Image;

		public BuildCategory BuildCat;
		public int AntiInfantryValue;
		public int AntiArmorValue;
		public int AntiAirValue;
		public bool HasSpotlight;
		public XYZ HalfDamageSmokeLocation1;
		public XYZ HalfDamageSmokeLocation2;
		public bool Radar;
		public bool SpySat;
		public bool WaterBound;
		public bool Adjacent;
		public bool Capturable;
		public bool Powered;
		public bool PoweredSpecial;
		public bool Overpowerable;
		public bool Spyable;
		public bool CanC4;
		public bool WantsExtraSpace;
		public bool Bib;
		public bool Unsellable;
		public bool ClickRepairable;
		public bool CanBeOccupied;
		public bool CanOccupyFire;
		public bool ShowOccupantPips;
		public int MaxNumberOccupants;
		public int NumImpassableRows;
		public int ProduceCashStartup;
		public int ProduceCashAmount;
		public int ProduceCashDelay;
		public int InfantryGainSelfHeal;
		public int UnitsGainSelfHeal;
		public int RefinerySmokeFrames;
		public bool BaseNormal;
		public bool EligibileForAllyBuilding;
		public bool EligibleForDelayKill;
		public bool NeedsEngineer;
		public Sound CaptureEvaEvent;
		public bool ProtectWithWall;
		public bool Wall;
		public bool Weeder;
		public bool Helipad;
		public bool OrePurifier;
		public bool FactoryPlant;
		public FactoryType Factory;
		public VehicleType FreeUnit;
		public bool HoverPad;
		public bool IsTemple;
		public bool IsPlug;
		public InfantryType SecretInfantry;
		public VehicleType SecretUnit;
		public BuildingType SecretBuilding;
		public float InfantryCostBonus;
		public float UnitsCostBonus;
		public float AircraftCostBonus;
		public float BuildingsCostBonus;
		public float DefensesCostBonus;
		public bool TogglePower;
		public Sound BuildupSound;
		public Sound PackupSound;
		public Sound CreateUnitSound;
		public Sound UnitExitSound;
		public Sound UnitEnterSound;
		public Sound WorkingSound;
		public Sound NotWorkingSound;
		public bool UnitRepair;
		public bool UnitReload;
		public bool Bunker;
		public bool Cloning;
		public bool Grinding;
		public bool UnitAbsorb;
		public bool InfantryAbsorb;
		public bool SecretLab;
		public bool DockUnload;
		public bool Gate;
		public bool SAM;
		public bool ConstructionYard;
		public bool NukeSilo;
		public bool Refinery;
		public bool WeaponsFactory;
		public bool LaserFencePost;
		public bool LaserFence;
		public bool FirestormWall;
		public bool Hospital;
		public bool Armory;
		public bool GDIBarracks;
		public bool NodBarracks;
		public bool YuriBarracks;
		public bool EMPulseCannon;
		public bool TickTank;
		public float ChargedAnimTime;
		public SuperWeaponType SuperWeapon;
		public SuperWeaponType SuperWeapon2;
		public bool CloakGenerator;
		public bool SensorArray;
		public int CloakRadiusInCells;
		public int PsychicDetectionRadius;
		public int BarrelStartPitch;
		public int DeployFacing;
		public int LightVisibility;
		public float LightIntensity;
		public float LightRedTint;
		public float LightGreenTint;
		public float LightBlueTint;
		public float GateCloseDelay;
		public bool InvisibleInGame;
		public string PowersUpBuilding;
		public int PowersUpToLevel;
		public bool BridgeRepairHut;
		public bool HasStupidGuardMode;
		public bool CrateBeneath;
		public bool CrateBeneathIsMoney;
		public bool LeaveRubble;
		public bool PlaceAnywhere;
		public bool ICBMLauncher;
		public bool Artillary;
		public XYZ TargetCoordOffset;
		public XYZ ExitCoord;
		public bool AIBuildThis;
		public bool IsBaseDefense;
		public bool IsThreatRatingNode;
		public bool ConcentricRadialIndicator;
		public int Power;
		public int ExtraPower;
		public Animation TurretAnim;
		public Animation TurretAnimDamaged;
		public Animation TurretAnimGarrisoned;
		public int TurretAnimX;
		public int TurretAnimY;
		public int TurretAnimZAdjust;
		public int TurretAnimYSort;
		public bool TurretAnimPowered;
		public bool TurretAnimPoweredLight;
		public bool TurretAnimPoweredEffect;
		public bool TurretAnimPoweredSpecial;
		public bool TurretAnimIsVoxel;
		public string VoxelBarrelFile;
		public XYZ VoxelBarrelOffsetToPitchPivotPoint;
		public XYZ VoxelBarrelOffsetToRotatePivotPoint;
		public XYZ VoxelBarrelOffsetToBuildingPivotPoint;
		public XYZ VoxelBarrelOffsetToBarrelEnd;
		public int Upgrades;
		public int NumberOfDocks;
		public XYZ DockingOffsetX;
		public TerrainType ToTile;



	}
}
